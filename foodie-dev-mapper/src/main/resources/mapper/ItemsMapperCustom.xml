<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.ItemsMapperCustom">

    <select id="queryItemComments" resultType="com.imooc.pojo.vo.ItemCommentVO" parameterType="Map">
        SELECT
            ic.comment_level as commentLevel,
            ic.content as content,
            ic.sepc_name as specName,
            ic.created_time as createdTime,
            u.face as userFace,
            u.nickname as nickname
        FROM
            items_comments ic
        LEFT JOIN
            users u
        ON
            ic.user_id = u.id
        WHERE
            ic.item_id = #{paramsMap.itemId}
        <if test=" paramsMap.level != null and paramsMap.level != '' ">
            AND ic.comment_level = #{paramsMap.level}
        </if>
    </select>

    <select id="searchItems" resultType="com.imooc.pojo.vo.SearchItemsVO" parameterType="Map">
        SELECT
            i.id as itemId,
            i.sell_counts as sellCounts,
            i.item_name as itemName,
            ii.url as imgUrl,
            ts.price_discount as price
        FROM
            items i
                LEFT JOIN
            items_img ii
            ON
                i.id = ii.item_id
                LEFT JOIN
            (SELECT item_id, MIN(price_discount) as price_discount FROM items_spec GROUP BY item_id) ts
            ON
                i.id = ts.item_id
        WHERE
            ii.is_main = 1
            <if test=" paramsMap.keywords != null and paramsMap.keywords != '' ">
                AND i.item_name like '%${paramsMap.keywords}%'
            </if>
        ORDER BY
             <choose>
                 <when test=" paramsMap.sort == &quot;c&quot; ">
                     i.sell_counts desc
                 </when>
                 <when test=" paramsMap.sort == &quot;p&quot; ">
                     ts.price_discount asc
                 </when>
                 <otherwise>
                     i.item_name asc
                 </otherwise>
             </choose>
    </select>
    <!-- k: 默认，代表默认排序，根据name-->
    <!-- c: 根据销量排序-->
    <!-- p: 根据价格排序-->

    <select id="searchItemsByThirdCat" resultType="com.imooc.pojo.vo.SearchItemsVO" parameterType="Map">
        SELECT
            i.id as itemId,
            i.sell_counts as sellCounts,
            i.item_name as itemName,
            ii.url as imgUrl,
            ts.price_discount as price
        FROM
            items i
        LEFT JOIN
            items_img ii
        ON
            i.id = ii.item_id
        LEFT JOIN
            (SELECT item_id, MIN(price_discount) as price_discount FROM items_spec GROUP BY item_id) ts
        ON
            i.id = ts.item_id
        WHERE
            ii.is_main = 1
            AND
          i.cat_id = #{paramsMap.catId}
        ORDER BY
        <choose>
            <when test=" paramsMap.sort == &quot;c&quot; ">
                i.sell_counts desc
            </when>
            <when test=" paramsMap.sort == &quot;p&quot; ">
                ts.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" resultType="com.imooc.pojo.vo.ShopcartVO" parameterType="List">
        SELECT
            items.id as itemId,
            items.item_name as itemName,
            items_img.url as itemImgUrl,
            items_spec.id as specId,
            items_spec.`name` as specName,
            items_spec.price_discount as priceDiscount,
            items_spec.price_normal as priceNormal
        FROM
            items_spec
                LEFT JOIN
            items
            ON
                items.id = items_spec.item_id
                LEFT JOIN
            items_img
            ON
                items.id = items_img.item_id
        WHERE
            items_img.is_main = 1
          AND
            items_spec.id in
            <foreach collection="paramsList" index="index" item="specId" open="(" close=")" separator=",">
                #{specId}
            </foreach>
    </select>

<!--  乐观锁：如果商品的数量满足要求，可以减少  -->
    <update id="decreaseItemSpecStock">
        UPDATE
            items_spec
        SET
            stock = stock - #{pendingCounts}
        WHERE
            id = #{specId}
            AND
            stock >= #{pendingCounts}
    </update>



</mapper>